networks:
  mynetwork:
    driver: bridge

services:

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ep-still-wildflower-a1g2mzvv-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
      - SPRING_DATASOURCE_USERNAME=neondb_owner
      - SPRING_DATASOURCE_PASSWORD=npg_SAwTcplYI76U
    depends_on:
      - kafka
    networks:
      - mynetwork

  board-service:
    build:
      context: ./board-service
      dockerfile: Dockerfile
    container_name: board-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ep-holy-rain-a1dlmnuf-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
      - SPRING_DATASOURCE_USERNAME=neondb_owner
      - SPRING_DATASOURCE_PASSWORD=npg_AVguLt0C7bUi
    depends_on:
      - kafka
    networks:
      - mynetwork

  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    container_name: task-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ep-mute-cherry-a1a2vpx4-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
      - SPRING_DATASOURCE_USERNAME=neondb_owner
      - SPRING_DATASOURCE_PASSWORD=npg_orbPB1d2SRFm
    depends_on:
      - kafka
    networks:
      - mynetwork

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ep-nameless-rice-a1iawmbl-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
      - SPRING_DATASOURCE_USERNAME=neondb_owner
      - SPRING_DATASOURCE_PASSWORD=npg_iZbfa7k8Bdvt
    depends_on:
      - kafka
    networks:
      - mynetwork

  redis:
    image: redis:7
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  kafka:
    image: bitnami/kafka:3.5.1
    container_name: kafka-broker
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  zookeeper:
    image: bitnami/zookeeper:3.8.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - mynetwork
